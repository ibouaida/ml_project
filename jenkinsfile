pipeline {
    agent any  // Utilise n'importe quel agent disponible

    environment {
        // Variables d'environnement, à personnaliser
        GITHUB_CREDENTIALS = 'ibouaida/Ubpvt@5383'  // ID des credentials pour GitHub
        REPO_URL = 'https://github.com/ibouaida/ml_project.git'  // URL du dépôt GitHub
    }

    stages {
        stage('Checkout') {
            steps {
                // Cloner le dépôt depuis GitHub
                git credentialsId: "${ibouaida/Ubpvt@5383}", url: "${https://github.com/ibouaida/ml_project.git}"
            }
        }

        stage('Build') {
            steps {
                script {
                    // Ajoutez ici les commandes pour construire votre projet, par exemple pour un projet Node.js
                    // Dans cet exemple, nous utilisons un projet Node.js comme référence
                    bat 'docker builtd -t ml_project .'
                    
                }
            }
        }

        stage('Tag build image') {
            steps {
                script {
                    // Exécuter les tests unitaires
                    // Exemple pour un projet Node.js avec Mocha
                    bat 'docker tag ml_project ibouaida/ml_project:v1 .'
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Déployer l'application après la réussite des tests
                    // Exemple pour un déploiement à un environnement Docker (selon votre configuration)
                    // Si vous utilisez Docker, remplacez cette étape par votre processus de déploiement spécifique
                    sh 'docker build -t ml_project .'
                    
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline terminé avec succès!'
        }
        failure {
            echo 'Le pipeline a échoué!'
        }
    }
}
